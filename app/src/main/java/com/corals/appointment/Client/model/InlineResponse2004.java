/*
 * Corals app
 * Corals openAPI file. Current Develop
 *
 * OpenAPI spec version: 1.0.1
 * Contact: gp2wins-corals@yahoo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.corals.appointment.Client.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;


/**
 * InlineResponse2004
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-13T07:13:20.960Z")
public class InlineResponse2004 {
  @SerializedName("cust_country_code")
  private String custCountryCode = null;

  @SerializedName("cust_email")
  private String custEmail = null;

  @SerializedName("cust_id")
  private String custId = null;

  @SerializedName("date_of_birth")
  private String dateOfBirth = null;

  @SerializedName("gender")
  private String gender = null;

  @SerializedName("member_merchants")
  private List<InlineResponse2004MemberMerchants> memberMerchants = null;

  @SerializedName("nick_name")
  private String nickName = null;

  @SerializedName("sessiontoken")
  private String sessiontoken = null;

  public InlineResponse2004 custCountryCode(String custCountryCode) {
    this.custCountryCode = custCountryCode;
    return this;
  }

   /**
   * Get custCountryCode
   * @return custCountryCode
  **/
  @Schema(description = "")
  public String getCustCountryCode() {
    return custCountryCode;
  }

  public void setCustCountryCode(String custCountryCode) {
    this.custCountryCode = custCountryCode;
  }

  public InlineResponse2004 custEmail(String custEmail) {
    this.custEmail = custEmail;
    return this;
  }

   /**
   * Get custEmail
   * @return custEmail
  **/
  @Schema(description = "")
  public String getCustEmail() {
    return custEmail;
  }

  public void setCustEmail(String custEmail) {
    this.custEmail = custEmail;
  }

  public InlineResponse2004 custId(String custId) {
    this.custId = custId;
    return this;
  }

   /**
   * Get custId
   * @return custId
  **/
  @Schema(description = "")
  public String getCustId() {
    return custId;
  }

  public void setCustId(String custId) {
    this.custId = custId;
  }

  public InlineResponse2004 dateOfBirth(String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @Schema(description = "")
  public String getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public InlineResponse2004 gender(String gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @Schema(description = "")
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }

  public InlineResponse2004 memberMerchants(List<InlineResponse2004MemberMerchants> memberMerchants) {
    this.memberMerchants = memberMerchants;
    return this;
  }

  public InlineResponse2004 addMemberMerchantsItem(InlineResponse2004MemberMerchants memberMerchantsItem) {
    if (this.memberMerchants == null) {
      this.memberMerchants = new ArrayList<InlineResponse2004MemberMerchants>();
    }
    this.memberMerchants.add(memberMerchantsItem);
    return this;
  }

   /**
   * Get memberMerchants
   * @return memberMerchants
  **/
  @Schema(description = "")
  public List<InlineResponse2004MemberMerchants> getMemberMerchants() {
    return memberMerchants;
  }

  public void setMemberMerchants(List<InlineResponse2004MemberMerchants> memberMerchants) {
    this.memberMerchants = memberMerchants;
  }

  public InlineResponse2004 nickName(String nickName) {
    this.nickName = nickName;
    return this;
  }

   /**
   * Get nickName
   * @return nickName
  **/
  @Schema(description = "")
  public String getNickName() {
    return nickName;
  }

  public void setNickName(String nickName) {
    this.nickName = nickName;
  }

  public InlineResponse2004 sessiontoken(String sessiontoken) {
    this.sessiontoken = sessiontoken;
    return this;
  }

   /**
   * Get sessiontoken
   * @return sessiontoken
  **/
  @Schema(description = "")
  public String getSessiontoken() {
    return sessiontoken;
  }

  public void setSessiontoken(String sessiontoken) {
    this.sessiontoken = sessiontoken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004 inlineResponse2004 = (InlineResponse2004) o;
    return Objects.equals(this.custCountryCode, inlineResponse2004.custCountryCode) &&
        Objects.equals(this.custEmail, inlineResponse2004.custEmail) &&
        Objects.equals(this.custId, inlineResponse2004.custId) &&
        Objects.equals(this.dateOfBirth, inlineResponse2004.dateOfBirth) &&
        Objects.equals(this.gender, inlineResponse2004.gender) &&
        Objects.equals(this.memberMerchants, inlineResponse2004.memberMerchants) &&
        Objects.equals(this.nickName, inlineResponse2004.nickName) &&
        Objects.equals(this.sessiontoken, inlineResponse2004.sessiontoken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(custCountryCode, custEmail, custId, dateOfBirth, gender, memberMerchants, nickName, sessiontoken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004 {\n");
    
    sb.append("    custCountryCode: ").append(toIndentedString(custCountryCode)).append("\n");
    sb.append("    custEmail: ").append(toIndentedString(custEmail)).append("\n");
    sb.append("    custId: ").append(toIndentedString(custId)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    memberMerchants: ").append(toIndentedString(memberMerchants)).append("\n");
    sb.append("    nickName: ").append(toIndentedString(nickName)).append("\n");
    sb.append("    sessiontoken: ").append(toIndentedString(sessiontoken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

