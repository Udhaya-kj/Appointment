/*
 * Corals app
 * Corals openAPI file. Current Develop
 *
 * OpenAPI spec version: 1.0.1
 * Contact: gp2wins-corals@yahoo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.corals.appointment.Client.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;


/**
 * GenerictokengenerateRedeem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-13T07:13:20.960Z")
public class GenerictokengenerateRedeem {
  @SerializedName("paymentamount")
  private String paymentamount = null;

  public GenerictokengenerateRedeem paymentamount(String paymentamount) {
    this.paymentamount = paymentamount;
    return this;
  }

   /**
   * Get paymentamount
   * @return paymentamount
  **/
 @Schema(description = "")
  public String getPaymentamount() {
    return paymentamount;
  }

  public void setPaymentamount(String paymentamount) {
    this.paymentamount = paymentamount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerictokengenerateRedeem generictokengenerateRedeem = (GenerictokengenerateRedeem) o;
    return Objects.equals(this.paymentamount, generictokengenerateRedeem.paymentamount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentamount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerictokengenerateRedeem {\n");
    
    sb.append("    paymentamount: ").append(toIndentedString(paymentamount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

